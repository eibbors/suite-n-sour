// Generated by CoffeeScript 1.3.3
(function() {
  var NsWebStoreClient, NsWebStoreSession, rpc,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  rpc = require('./rpc');

  NsWebStoreClient = (function(_super) {

    __extends(NsWebStoreClient, _super);

    function NsWebStoreClient(options) {
      NsWebStoreClient.__super__.constructor.call(this, options);
      this.session = new NsWebStoreSession(options);
    }

    NsWebStoreClient.prototype.shopr = function(path, options, cb) {
      var k, query, v, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      query = {
        c: (_ref = (_ref1 = options.company) != null ? _ref1 : this.session.companyId) != null ? _ref : null,
        n: (_ref2 = (_ref3 = options.siteNum) != null ? _ref3 : this.session.siteNum) != null ? _ref2 : 1,
        sc: (_ref4 = (_ref5 = options.section) != null ? _ref5 : this.session.section) != null ? _ref4 : null,
        category: (_ref6 = (_ref7 = options.category) != null ? _ref7 : this.session.category) != null ? _ref6 : null,
        id: (_ref8 = options.itemId) != null ? _ref8 : null,
        it: (_ref9 = options.itemType) != null ? _ref9 : 'A',
        search: (_ref10 = options.search) != null ? _ref10 : null,
        range: (_ref11 = options.range) != null ? _ref11 : null,
        ext: options.ext ? 'T' : null,
        logoff: options.logoff ? 'T' : null,
        newcust: options.newCust ? 'T' : null,
        "continue": (_ref12 = options.continueURL) != null ? _ref12 : null,
        redirect: (_ref13 = options.redirectURL) != null ? _ref13 : null
      };
      for (k in query) {
        v = query[k];
        if (v === null) {
          delete query[k];
        }
      }
      return this.get(path != null ? path : '/s.nl/.f', {
        query: query
      }, cb);
    };

    NsWebStoreClient.prototype.setWebStore = function(company, siteNum, section, category) {
      this.session.companyId = company != null ? company : null;
      this.session.siteNum = siteNum != null ? siteNum : null;
      this.session.section = section != null ? section : null;
      return this.session.category = category != null ? category : null;
    };

    NsWebStoreClient.prototype.getItemName = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemname.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getItemPrice = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemprice.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getItemWeight = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemweight.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getShortItemDescription = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemsdescr.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getLongItemDescription = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemldescr.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getFeaturedItemDescription = function(itemId, cb) {
      return this.shopr('/app/site/query/getitemfdescr.nl', {
        itemId: itemId
      }, cb);
    };

    NsWebStoreClient.prototype.getCurrentSubtotal = function(cb) {
      return this.shopr('/app/site/query/getcarttotal.nl', {}, cb);
    };

    NsWebStoreClient.prototype.getNumberOfCartItems = function(cb) {
      return this.shopr('/app/site/query/getcartitemcount.nl', {}, cb);
    };

    NsWebStoreClient.prototype.addItemToCart = function(id, qty, options, cb) {
      var k, params, v;
      params = {
        ext: 'T',
        buyid: id,
        add: qty != null ? qty : 1
      };
      for (k in options) {
        v = options[k];
        params[k] = v;
      }
      return this.shopr('/app/site/query/additemtocart.nl', params, cb);
    };

    NsWebStoreClient.prototype.addGiftCertToCart = function(id, from, toName, toEmail, message, amount, qty, cb) {
      var params;
      if (qty == null) {
        qty = 1;
      }
      params = {
        GIFTCERTFROM: from,
        GIFTCERTRECIPIENTNAME: toName,
        GIFTCERTRECIPIENTEMAIL: toEmail
      };
      if (amount != null) {
        params.amount = amount;
      }
      return this.addItemToCart(id, qty, params, cb);
    };

    return NsWebStoreClient;

  })(rpc.Client);

  NsWebStoreSession = (function() {

    function NsWebStoreSession(options) {
      var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
      this.host = (_ref = options.host) != null ? _ref : 'shopping.netsuite.com';
      this.customDomain = (_ref1 = options.domain) != null ? _ref1 : null;
      this.customPath = (_ref2 = options.path) != null ? _ref2 : null;
      this.companyId = (_ref3 = options.company) != null ? _ref3 : null;
      this.siteNum = (_ref4 = options.siteNum) != null ? _ref4 : 1;
      this.visitorId = (_ref5 = options.visitorId) != null ? _ref5 : null;
      this.shopperId = (_ref6 = options.shopperId) != null ? _ref6 : null;
    }

    return NsWebStoreSession;

  })();

  module.exports = {
    Client: NsWebStoreClient,
    Session: NsWebStoreSession
  };

}).call(this);
