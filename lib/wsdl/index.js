// Generated by CoffeeScript 1.3.3
(function() {
  var SuiteTalkObject, enums, fetchNamespace, schemas, xmlns;

  enums = {
    actSchedTyp: require('./actSchedTyp'),
    demandPlanningTyp: require('./demandPlanningTyp'),
    docFileCabTyp: require('./docFileCabTyp'),
    generalCommTyp: require('./generalCommTyp'),
    tranCustTyp: require('./tranCustTyp'),
    tranEmpTyp: require('./tranEmpTyp'),
    tranInvtTyp: require('./tranInvtTyp'),
    tranFinTyp: require('./tranFinTyp'),
    tranPurchTyp: require('./tranPurchTyp'),
    listRelTyp: require('./listRelTyp'),
    tranSalesTyp: require('./tranSalesTyp'),
    listSupportTyp: require('./listSupportTyp'),
    platformFaultTyp: require('./platformFaultTyp'),
    platformCoreTyp: require('./platformCoreTyp'),
    setupCustomTyp: require('./setupCustomTyp'),
    platformCommonTyp: require('./platformCommonTyp'),
    listEmpTyp: require('./listEmpTyp'),
    listAcctTyp: require('./listAcctTyp'),
    listMktTyp: require('./listMktTyp')
  };

  schemas = {
    platformFaults: require('./platformFaults'),
    platformCore: require('./platformCore'),
    platformMsgs: require('./platformMsgs'),
    actSched: require('./actSched'),
    generalComm: require('./generalComm'),
    listRel: require('./listRel'),
    tranPurch: require('./tranPurch'),
    listSupport: require('./listSupport'),
    tranSales: require('./tranSales'),
    listAcct: require('./listAcct'),
    tranFin: require('./tranFin'),
    tranCust: require('./tranCust'),
    tranBank: require('./tranBank'),
    platformCommon: require('./platformCommon'),
    tranGeneral: require('./tranGeneral'),
    listEmp: require('./listEmp'),
    setupCustom: require('./setupCustom'),
    docFileCab: require('./docFileCab'),
    tranInvt: require('./tranInvt'),
    listSite: require('./listSite'),
    tranEmp: require('./tranEmp'),
    listMkt: require('./listMkt'),
    demandPlanning: require('./demandPlanning')
  };

  xmlns = require('./xmlns');

  fetchNamespace = function(type) {
    var nsId, typeId, _ref, _ref1, _ref2, _ref3;
    if (type.indexOf(':') > 0) {
      _ref = type.split(':'), nsId = _ref[0], typeId = _ref[1];
      return {
        typeId: typeId,
        nsId: nsId,
        urn: (_ref1 = (_ref2 = xmlns[nsId]) != null ? _ref2 : xmlns[typeId]) != null ? _ref1 : xmlns.tns
      };
    } else {
      return {
        typeId: type,
        nsId: null,
        urn: (_ref3 = xmlns[type]) != null ? _ref3 : xmlns.tns
      };
    }
  };

  console.log(fetchNamespace('platformCore:RecordRef'));

  console.log(schemas['platformCore']['complexTypes']['RecordRef']);

  SuiteTalkObject = (function() {

    function SuiteTalkObject(type, init) {}

    return SuiteTalkObject;

  })();

}).call(this);
